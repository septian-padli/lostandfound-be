model Province {
    id     String @id @default(ulid())
    name   String
    slug   String @unique
    cities City[]
    users  User[]
    items  Item[]
}

model City {
    id         String   @id @default(ulid())
    name       String
    slug       String   @unique
    provinceId String
    province   Province @relation(fields: [provinceId], references: [id])
    users      User[]
    items      Item[]
}

model User {
    id           String    @id @default(ulid())
    email        String    @unique
    googleId     String    @unique
    name         String?
    username     String?
    photoprofile String?
    token        String?
    isAdmin      Boolean   @default(false)
    cityId       String?
    city         City?     @relation(fields: [cityId], references: [id])
    provinceId   String?
    province     Province? @relation(fields: [provinceId], references: [id])
    createdAt    DateTime  @default(now())
    updatedAt    DateTime  @updatedAt
    Item         Item[]
    Comment      Comment[]
}

model Category {
    id        String   @id @default(ulid())
    name      String
    slug      String   @unique
    itemCount Int      @default(0)
    items     Item[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Item {
    id           String    @id @default(ulid())
    userId       String
    user         User      @relation(fields: [userId], references: [id])
    images       Image[]
    comments     Comment[]
    name         String
    description  String
    address      String
    foundAt      DateTime
    isFound      Boolean   @default(false)
    isActive     Boolean   @default(true)
    countComment Int       @default(0)
    categoryId   String
    category     Category  @relation(fields: [categoryId], references: [id])
    cityId       String
    city         City      @relation(fields: [cityId], references: [id])
    provinceId   String
    province     Province  @relation(fields: [provinceId], references: [id])
    createdAt    DateTime  @default(now())
    updatedAt    DateTime  @updatedAt
}

model Image {
    id        String   @id @default(ulid())
    url       String
    itemId    String
    item      Item     @relation(fields: [itemId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Comment {
    id        String    @id @default(ulid())
    parentId  String?
    parent    Comment?  @relation("CommentReplies", fields: [parentId], references: [id])
    replies   Comment[] @relation("CommentReplies")
    itemId    String
    item      Item      @relation(fields: [itemId], references: [id])
    userId    String
    user      User      @relation(fields: [userId], references: [id])
    content   String
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
}
